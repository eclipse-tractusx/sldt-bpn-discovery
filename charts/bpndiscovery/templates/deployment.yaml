# Copyright (c) 2024 Robert Bosch Manufacturing Solutions GmbH
# Copyright (c) 2024 Contributors to the Eclipse Foundation
  #
  # See the NOTICE file(s) distributed with this work for additional
  # information regarding copyright ownership.
  #
  # This program and the accompanying materials are made available under the
  # terms of the Apache License, Version 2.0 which is available at
  # https://www.apache.org/licenses/LICENSE-2.0.
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  # License for the specific language governing permissions and limitations
  # under the License.
  #
  # SPDX-License-Identifier: Apache-2.0
  ###############################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bpndiscovery.fullname" . }}
  labels:
    {{- include "bpndiscovery.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.bpndiscovery.replicaCount }}
  selector:
    matchLabels:
      {{- include "bpndiscovery.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bpndiscovery.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 100
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.bpndiscovery.image.registry }}/{{ .Values.bpndiscovery.image.repository }}:{{ .Values.bpndiscovery.image.version | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.bpndiscovery.image.imagePullPolicy }}
          {{- if not .Values.bpndiscovery.authentication }}
          args: [ "--spring.profiles.active=local" ]
          {{- end }}
          ports:
            - containerPort: {{ .Values.bpndiscovery.containerPort }}
#         Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process
#         Refer Set the security context for a Pod section here - https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
          securityContext:
            runAsUser: 100
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.bpndiscovery.containerPort }}
            initialDelaySeconds: {{ .Values.bpndiscovery.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.bpndiscovery.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.bpndiscovery.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.bpndiscovery.containerPort }}
            initialDelaySeconds: {{ .Values.bpndiscovery.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.bpndiscovery.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.bpndiscovery.readinessProbe.failureThreshold }}
          envFrom:
            - secretRef:
                name: {{ include "bpndiscovery.fullname" . }}
            {{- if .Values.enablePostgres }}
            - secretRef:
                name: {{ .Values.postgresql.auth.existingSecret }}
            {{- end }}
          resources:
{{ .Values.bpndiscovery.resources | toYaml | indent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: empty-tmp
      volumes:
        - name: empty-tmp
          emptyDir: {}
      imagePullSecrets:
{{ .Values.bpndiscovery.imagePullSecrets | toYaml | indent 8 }}